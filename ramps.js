import"./assets/modulepreload-polyfill-3cfb730f.js";/* empty css                     */import{W as u,P as g,c as p,H as v,D as w,G as f,d as L,R as E,V as M}from"./assets/vendor-0fd547fe.js";let l=[];class P{constructor(e,s){if(console.log(`Инициализация SceneManager для canvasId: ${e} и modelPath: ${s}`),this.canvas=document.querySelector(e),!this.canvas){console.error(`Canvas с ID ${e} не найден`);return}this.renderer=new u({canvas:this.canvas,antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.canvas.clientWidth,this.canvas.clientHeight),console.log("Renderer успешно инициализирован"),this.camera=new g(50,this.canvas.clientWidth/this.canvas.clientHeight,.1,600),this.camera.position.set(15,5,17),console.log("Камера успешно инициализирована"),this.scene=new p,console.log("Сцена успешно инициализирована"),this.addLights(),this.loadModel(s),this.isMouseOver=!1,this.canvas.addEventListener("mousemove",t=>this.onMouseMove(t)),this.canvas.addEventListener("mouseleave",()=>this.isMouseOver=!1),this.canvas.addEventListener("mouseenter",()=>this.isMouseOver=!0),window.addEventListener("resize",()=>this.onWindowResize(),!1),l.push(this)}addLights(){console.log("Добавляем освещение");const e=4684276,s=10395294,t=1,i=new v(e,s,t);this.scene.add(i);const a=3010435,n=new w(a,t);n.position.set(0,10,0),n.target.position.set(-5,0,0),this.scene.add(n),this.scene.add(n.target),console.log("Освещение добавлено")}loadModel(e){console.log(`Пытаемся загрузить модель из ${e}`),new f().load(e,t=>{console.log("Объект успешно загружен"),this.modelGroup=new L,this.scene.add(this.modelGroup),this.model=t.scene,this.modelGroup.add(this.model),this.parts=[],this.model.traverse(i=>{i.isMesh&&(this.parts.push(i),i.userData.initialPosition=i.position.clone(),i.position.z+=Math.random()*20-10,i.userData.scatteredPosition=i.position.clone())}),console.log("Добавляем объект в сцену")},void 0,t=>{console.error(`Произошла ошибка при загрузке ${e}`,t)})}onMouseMove(e){const s=this.canvas.getBoundingClientRect(),t=e.clientX-s.left,i=e.clientY-s.top,a=t/this.canvas.clientWidth*2-1,n=-(i/this.canvas.clientHeight)*2+1,r=new E;r.setFromCamera({x:a,y:n},this.camera),r.far=50;const h=r.intersectObjects(this.scene.children,!0);if(h.length>0){const c=h[0].object;if(c.userData.initialPosition){const m=c.userData.initialPosition;c.position.lerp(m,.3)}}}onWindowResize(){const e=this.renderer.domElement,s=e.clientWidth,t=e.clientHeight;(e.width!==s||e.height!==t)&&(this.renderer.setSize(s,t,!1),this.camera.aspect=s/t,this.camera.updateProjectionMatrix())}updatePartsPositions(e){this.parts&&this.parts.forEach(s=>{const t=s.userData.initialPosition;s.position.lerpVectors(t,new M(0,0,0),e)})}render(){this.onWindowResize(),this.renderer.render(this.scene,this.camera)}}function d(){l.forEach(o=>o.render()),requestAnimationFrame(d)}function R(){console.log("Запуск main функции"),new P("#c1","/mini.glb"),d(),window.addEventListener("scroll",()=>{const o=window.pageYOffset||document.documentElement.scrollTop,e=document.documentElement.scrollHeight-window.innerHeight,s=o/e;l.forEach(t=>t.updatePartsPositions(s))})}R();
//# sourceMappingURL=ramps.js.map
